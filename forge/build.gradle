plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

archivesBaseName = "${rootProject.archives_base_name}-${rootProject.archive_version}-forge"

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

loom {
    forge {
        mixinConfig "inventorio.mixins.json"
    }
}

repositories {
    maven { url "https://thedarkcolour.github.io/KotlinForForge/" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    //Modding platform
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    implementation "thedarkcolour:kotlinforforge:${rootProject.forge_kotlin_version}"
    implementation "me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}"

    //Other mods we do integration with
    modCompileOnly "curse.maven:clumps-256717:4552340"

    //"Common" package
    common(project(path: ":common", configuration: "namedElements")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
        transitive = false
    }
}


shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = archivesBaseName
            artifact remapJar
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
}