plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

archivesBaseName = "${rootProject.archives_base_name}-${rootProject.archive_version}-neoforge"

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

repositories {
    maven { url "https://thedarkcolour.github.io/KotlinForForge/" }
    maven {
        url "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name "NeoForge"
        url "https://maven.neoforged.net/releases"
    }
}

dependencies {
    //Modding platform
    neoForge "net.neoforged:neoforge:${rootProject.neoforge_version}"

    implementation "thedarkcolour:kotlinforforge-neoforge:${rootProject.neoforge_kotlin_version}"
    implementation "me.shedaniel.cloth:cloth-config-neoforge:${rootProject.cloth_config_version}"

    //Other mods we do integration with
    modCompileOnly "maven.modrinth:clumps:MWDyKE94"

    //"Common" package
    common(project(path: ":common", configuration: "namedElements")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) {
        transitive = false
    }
}


shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = archivesBaseName
            artifact remapJar
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
}